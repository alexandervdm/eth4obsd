$OpenBSD$

Index: Makefile
--- Makefile.orig
+++ Makefile
@@ -1,12 +1,12 @@
-include ../mcl/common.mk
+include imported/mcl/common.mk
 ETH_CFLAGS=-DBLS_ETH -DBLS_SWAP_G
 
 UNIT?=8
 
-MIN_CFLAGS=-std=c++03 -O3 -DNDEBUG -DMCL_DONT_USE_OPENSSL -DMCL_LLVM_BMI2=0 -DMCL_USE_LLVM=1 -DMCL_USE_VINT -DMCL_SIZEOF_UNIT=$(UNIT) -DMCL_VINT_FIXED_BUFFER -DMCL_MAX_BIT_SIZE=384 -DCYBOZU_DONT_USE_EXCEPTION -DCYBOZU_DONT_USE_STRING -D_FORTIFY_SOURCE=0 -I../bls/include -I../mcl/include $(ETH_CFLAGS) $(CFLAGS_USER)
+MIN_CFLAGS=-std=c++03 -O3 -DNDEBUG -DMCL_DONT_USE_OPENSSL -DMCL_LLVM_BMI2=0 -DMCL_USE_LLVM=1 -DMCL_USE_VINT -DMCL_SIZEOF_UNIT=$(UNIT) -DMCL_VINT_FIXED_BUFFER -DMCL_MAX_BIT_SIZE=384 -DCYBOZU_DONT_USE_EXCEPTION -DCYBOZU_DONT_USE_STRING -D_FORTIFY_SOURCE=0 -Iimported/bls/include -Iimported/mcl/include $(ETH_CFLAGS) $(CFLAGS_USER)
 OBJ_DIR=obj
 
-all: ../mcl/src/base$(BIT).ll
+all: imported/mcl/src/base$(BIT).ll
 ifeq ($(CPU),x86-64)
 	$(eval _ARCH=amd64)
 ifeq ($(OS),mingw64)
@@ -20,7 +20,11 @@ ifeq ($(OS),mac)
 	$(eval _OS=darwin)
 	$(eval MIN_CFLAGS=$(MIN_CFLAGS) -fPIC)
 endif
+ifeq ($(OS),openbsd)
+	$(eval _OS=openbsd)
+	$(eval MIN_CFLAGS=$(MIN_CFLAGS) -fPIC)
 endif
+endif
 ifeq ($(CPU),aarch64)
 	$(eval _ARCH=arm64)
 ifeq ($(OS),Linux)
@@ -30,18 +34,18 @@ endif
 endif
 	$(eval LIB_DIR=bls/lib/$(_OS)/$(_ARCH))
 	-mkdir -p $(LIB_DIR)
-	$(CXX) -c -o $(OBJ_DIR)/fp.o ../mcl/src/fp.cpp $(MIN_CFLAGS)
-	$(CXX) -c -o $(OBJ_DIR)/base$(BIT).o ../mcl/src/base$(BIT).ll $(MIN_CFLAGS)
-	$(CXX) -c -o $(OBJ_DIR)/bls_c384_256.o ../bls/src/bls_c384_256.cpp $(MIN_CFLAGS)
+	$(CXX) -c -o $(OBJ_DIR)/fp.o imported/mcl/src/fp.cpp $(MIN_CFLAGS)
+	$(CXX) -c -o $(OBJ_DIR)/base$(BIT).o imported/mcl/src/base$(BIT).ll $(MIN_CFLAGS)
+	$(CXX) -c -o $(OBJ_DIR)/bls_c384_256.o imported/bls/src/bls_c384_256.cpp $(MIN_CFLAGS)
 	$(AR) $(LIB_DIR)/libbls384_256.a $(OBJ_DIR)/bls_c384_256.o $(OBJ_DIR)/fp.o $(OBJ_DIR)/base$(BIT).o
 
-BASE_LL=../mcl/src/base64.ll ../mcl/src/base32.ll
+BASE_LL=imported/mcl/src/base64.ll imported/mcl/src/base32.ll
 
-../mcl/src/base64.ll:
-	$(MAKE) -C ../mcl src/base64.ll
+imported/mcl/src/base64.ll:
+	$(MAKE) -C imported/mcl src/base64.ll
 
-../mcl/src/base32.ll:
-	$(MAKE) -C ../mcl src/base32.ll BIT=32
+imported/mcl/src/base32.ll:
+	$(MAKE) -C imported/mcl src/base32.ll BIT=32
 
 ANDROID_TARGET=armeabi-v7a arm64-v8a x86_64
 android: $(BASE_LL)
@@ -89,16 +93,16 @@ each_ios: $(BASE_LL)
 	ranlib $(IOS_OUTDIR)/$(IOS_LIB)
 
 update:
-	cp ../bls/include/bls/bls.h bls/include/bls/.
-	cp ../bls/include/bls/bls384_256.h bls/include/bls/.
-	cp ../mcl/include/mcl/bn.h bls/include/mcl/.
-	cp ../mcl/include/mcl/bn_c384_256.h bls/include/mcl/.
-	cp ../mcl/include/mcl/curve_type.h bls/include/mcl/.
-	patch -o - -p0 ../bls/ffi/go/bls/mcl.go <patch/mcl.patch > bls/mcl.go
-	patch -o - -p0 ../bls/ffi/go/bls/bls.go <patch/bls.patch > bls/bls.go
+	cp imported/bls/include/bls/bls.h bls/include/bls/.
+	cp imported/bls/include/bls/bls384_256.h bls/include/bls/.
+	cp imported/mcl/include/mcl/bn.h bls/include/mcl/.
+	cp imported/mcl/include/mcl/bn_c384_256.h bls/include/mcl/.
+	cp imported/mcl/include/mcl/curve_type.h bls/include/mcl/.
+	patch -o - -p0 imported/bls/ffi/go/bls/mcl.go <patch/mcl.patch > bls/mcl.go
+	patch -o - -p0 imported/bls/ffi/go/bls/bls.go <patch/bls.patch > bls/bls.go
 
 update_patch:
-	-diff -up ../bls/ffi/go/bls/mcl.go bls/mcl.go > patch/mcl.patch
-	-diff -up ../bls/ffi/go/bls/bls.go bls/bls.go > patch/bls.patch
+	-diff -up imported/bls/ffi/go/bls/mcl.go bls/mcl.go > patch/mcl.patch
+	-diff -up imported/bls/ffi/go/bls/bls.go bls/bls.go > patch/bls.patch
 
 .PHONY: android ios each_ios
